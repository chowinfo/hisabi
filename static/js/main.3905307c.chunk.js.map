{"version":3,"sources":["molecules/viewer/viewerSlice.js","molecules/editor/editorSlice.js","app/appReducer.js","app/store.js","atoms/Modal.jsx","atoms/Dropdown.jsx","molecules/dropdown/ViewDropdown.jsx","molecules/dropdown/EditDropdown.jsx","atoms/Header.jsx","utilities/downloadUtil.js","utilities/filterUtil.js","molecules/viewer/TPLView.jsx","molecules/viewer/BSView.jsx","molecules/viewer/CSView.jsx","molecules/viewer/Viewer.jsx","atoms/EditableFormGroup.jsx","molecules/editor/TEdit.jsx","molecules/editor/PLEdit.jsx","molecules/editor/BSEdit.jsx","molecules/editor/CSEdit.jsx","molecules/editor/InfoEdit.jsx","molecules/editor/Editor.jsx","organisms/App/App.jsx","index.js"],"names":["viewerSlice","createSlice","name","initialState","view","reducers","toggleView","state","action","payload","actions","editorSlice","edit","toggleEdit","appSlice","isEditing","data","year","Info","Name","PAN","T","To","By","PL","BS","CS","updateData","toggleEditMode","type","updateSheet","key","value","sheet","split","reduce","o","i","updateSheetKey","newKey","currentSheet","Object","keys","includes","console","error","newSheet","index","length","addSheetRow","configureStore","reducer","viewer","viewerReducer","editor","editorReducer","app","appReducer","Modal","this","props","isActive","className","onClick","onClose","modalTitle","evt","children","yesBtn","noBtn","Component","defaultProps","Dropdown","handleClickOutside","event","path","composedPath","onChange","displayAreaRef","dropTogglerRef","setState","isOpen","toggleDropDown","document","addEventListener","removeEventListener","label","ref","ViewDropdown","React","useState","dropdownPopoverShow","setDropdownPopoverShow","dispatch","useDispatch","closeDropdownPopover","href","e","preventDefault","EditDropdown","Header","printButton","setCurrentView","fixed","navbarOpen","setNavbarOpen","uploadModal","setUploadModal","jsonFileInputRef","createRef","useSelector","process","src","alt","id","filename","Date","now","contentType","JSON","stringify","undefined","blob","Blob","createEvent","a","createElement","download","window","URL","createObjectURL","dataset","downloadurl","join","initMouseEvent","dispatchEvent","downloadFile","log","onSubmit","current","files","file","reader","FileReader","onload","parse","target","result","readAsText","alert","htmlFor","getObjectSum","obj","sum","values","formatCurrency","Intl","NumberFormat","style","currency","notation","currencySign","signDisplay","format","BSFilter","filteredData","success","message","tradename","address","title","assets","liabilities","entries","forEach","entry","push","amount","valid","suggestionCorpus","underline","height","subEntry","bankData","regexMatch","match","bankName","bankAbbrev","BSABankFilter","total","TPLFilter","t_to","t_by","pl_to","pl_by","DepTPLFilter","t_total","pl_total","TPLView","map","to","by","nextProps","prevState","connect","ownProps","BSView","liability","asset","CSView","pan","fyay","cs_rows","width","margin","row","parseInt","nonDeductableFields","nullableFields","CSFilter","Viewer","forwardRef","EditableFormGroup","keyName","isKeyEditable","isValueEditable","valueInputValue","keyInputValue","newState","editableKey","sheetName","handleKeyChange","handleChange","Fragment","onDoubleClick","updateKey","updateValue","TEdit","showModal","maxWidth","ind","openModal","handleSubmit","closeModal","PLEdit","BSEdit","CSEdit","InfoEdit","Editor","others","App","componentRef","useRef","handlePrint","useReactToPrint","content","useEffect","onkeydown","ctrlKey","keyCode","charCodeAt","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.3905307c.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const viewerSlice = createSlice({\n    name: \"viewer\",\n    initialState: {\n        view: \"TPL\"\n    },\n    reducers: {\n        toggleView: (state, action) => {\n            state.view = action.payload;\n        }\n    }\n});\n\nexport const { toggleView } = viewerSlice.actions;\n\nexport default viewerSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const editorSlice = createSlice({\n    name: \"editor\",\n    initialState: {\n        edit: \"T\"\n    },\n    reducers: {\n        toggleEdit: (state, action) => {\n            state.edit = action.payload;\n        }\n    }\n});\n\nexport const { toggleEdit } = editorSlice.actions;\n\nexport default editorSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const appSlice = createSlice({\n\tname: 'app',\n\tinitialState: {\n\t\tisEditing: false,\n\t\tdata: {\n\t\t\tyear: 2021,\n\t\t\tInfo: {\n\t\t\t\tName: 'XYZ',\n\t\t\t\t'Trade Name': 'ABC Pvt Ltd',\n\t\t\t\tPAN: 'AAAAA12345A',\n\t\t\t\t'Address 1': 'Line 1',\n\t\t\t\t'Address 2': 'Line 2',\n\t\t\t},\n\t\t\tT: {\n\t\t\t\tTo: {\n\t\t\t\t\t'Opening Stock': 10450,\n\t\t\t\t},\n\t\t\t\tBy: {\n\t\t\t\t\t'Closing Stock': 10650,\n\t\t\t\t},\n\t\t\t},\n\t\t\tPL: {\n\t\t\t\tTo: {},\n\t\t\t\tBy: {},\n\t\t\t},\n\t\t\tBS: {\n\t\t\t\tTo: {},\n\t\t\t\tBy: {},\n\t\t\t},\n\t\t\tCS: {},\n\t\t},\n\t},\n\treducers: {\n\t\tupdateData: (state, action) => {\n\t\t\tstate.data = action.payload;\n\t\t},\n\t\ttoggleEditMode: (state, action) => {\n\t\t\tstate.isEditing = action.payload.type === 'edit';\n\t\t},\n\t\tupdateSheet: (state, action) => {\n\t\t\tconst { key, value, sheet } = action.payload;\n\t\t\tsheet.split('.').reduce((o, i) => o[i], state.data)[key] = value;\n\t\t},\n\t\tupdateSheetKey: (state, action) => {\n\t\t\tconst { key, newKey, sheet } = action.payload;\n\t\t\tconst currentSheet = sheet.split('.').reduce((o, i) => o[i], state.data);\n\t\t\tif (key !== newKey && Object.keys(currentSheet).includes(newKey)) {\n\t\t\t\tconsole.error('Key already exists');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst newSheet = Object.keys(currentSheet).reduce((o, i) => {\n\t\t\t\tif (i === key) {\n\t\t\t\t\to[newKey] = currentSheet[i];\n\t\t\t\t} else {\n\t\t\t\t\to[i] = currentSheet[i];\n\t\t\t\t}\n\t\t\t\treturn o;\n\t\t\t}, {});\n\t\t\tsheet.split('.').reduce((o, i, index) => {\n\t\t\t\tif (index === sheet.split('.').length - 1) {\n\t\t\t\t\to[i] = newSheet;\n\t\t\t\t} else {\n\t\t\t\t\to[i] = o[i] || {};\n\t\t\t\t}\n\t\t\t\treturn o[i];\n\t\t\t}, state.data);\n\t\t},\n\t\taddSheetRow: (state, action) => {\n\t\t\tconst { key, value, sheet } = action.payload;\n\t\t\tsheet.split('.').reduce((o, i) => o[i], state.data)[key] = value;\n\t\t},\n\t},\n});\n\nexport const { updateData, toggleEditMode, updateSheet, updateSheetKey, addSheetRow } = appSlice.actions;\n\nexport default appSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport viewerReducer from \"../molecules/viewer/viewerSlice\";\nimport editorReducer from \"../molecules/editor/editorSlice\";\nimport appReducer from \"./appReducer\";\n\nexport default configureStore({\n    reducer: { viewer: viewerReducer, editor: editorReducer, app: appReducer },\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FaTimes } from 'react-icons/fa';\n\nclass Modal extends Component {\n\tstatic propTypes = {\n\t\tisActive: PropTypes.bool,\n\t\tmodalTitle: PropTypes.string,\n\t\tyesBtn: PropTypes.element,\n\t\tnoBtn: PropTypes.element,\n\t\tchildren: PropTypes.element,\n\t\tonClose: PropTypes.func,\n\t};\n\tstatic defaultProps = {\n\t\tisActive: false,\n\t\tmodalTitle: 'Simple Modal',\n\t\tchildren: (\n\t\t\t<div>\n\t\t\t\t<h5 className=\"center\">Do you like this modal?</h5>\n\t\t\t</div>\n\t\t),\n\t\tyesBtn: (\n\t\t\t<button className=\"modal-close px-4 bg-green p-3 rounded text-xs uppercase text-white hover:bg-green-light\">\n\t\t\t\tYes\n\t\t\t</button>\n\t\t),\n\t\tnoBtn: (\n\t\t\t<button className=\"modal-close border-gray-dark ml-4 px-4 bg-white p-3 rounded text-xs uppercase text-gray-dark hover:bg-gray-dark hover:text-white\">\n\t\t\t\tNo\n\t\t\t</button>\n\t\t),\n\t};\n\trender() {\n\t\tif (!this.props.isActive) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"modal fixed w-full h-full top-0 left-0 flex items-center justify-center\">\n\t\t\t\t<div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\"></div>\n\n\t\t\t\t<div className=\"modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.props.onClose();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"modal-close absolute top-0 right-0 cursor-pointer flex flex-col items-center mt-4 mr-4 text-white text-sm z-50\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t<FaTimes />\n\t\t\t\t\t\t{/* <span className=\"text-sm\">(Esc)</span> */}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Add margin if you want to see some of the overlay behind the modal */}\n\t\t\t\t\t<div className=\"modal-content text-left border border-gray-dark\">\n\t\t\t\t\t\t{/* Title */}\n\t\t\t\t\t\t<div className=\"flex justify-between items-center p-5\">\n\t\t\t\t\t\t\t<p className=\"text-2xl font-bold\">{this.props.modalTitle}</p>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"modal-close cursor-pointer z-50\"\n\t\t\t\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\t\t\t\tthis.props.onClose(evt);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FaTimes />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{/* Body */}\n\t\t\t\t\t\t<div className=\"modal-body p-5\">{this.props.children}</div>\n\n\t\t\t\t\t\t{/* Footer */}\n\t\t\t\t\t\t{this.props.yesBtn && this.props.noBtn ? (\n\t\t\t\t\t\t\t<div className=\"flex justify-center gap-2 p-5\">\n\t\t\t\t\t\t\t\t{this.props.yesBtn}\n\t\t\t\t\t\t\t\t{this.props.noBtn}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FaChevronDown as ShowMenuIcon, FaChevronUp as HideMenuIcon} from \"react-icons/fa\";\n\nclass Dropdown extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisOpen: this.props.isOpen,\n\t\t};\n\t\tthis.displayAreaRef = <></>;\n\t\tthis.dropTogglerRef = <></>;\n\t}\n\n\tstatic propTypes = {\n\t\tisOpen: PropTypes.bool.isRequired,\n\t\tlabel: PropTypes.oneOfType([\n\t\t\tPropTypes.string.isRequired,\n\t\t\tPropTypes.node.isRequired,\n\t\t]),\n\t\tchildren: PropTypes.node,\n\t\tonChange: PropTypes.func,\n\t};\n\n\tstatic defaultProps = {\n\t\tisOpen: false,\n\t\tlabel: \"Dropdown\",\n\t\tchildren: null,\n\t};\n\n\tcomponentDidMount() {\n\t\t//Assign click handler to listen the click to close the dropdown when clicked outside\n\t\tdocument.addEventListener(\"click\", this.handleClickOutside);\n\t}\n\n\tcomponentWillUnmount() {\n\t\t//Remove the listener\n\t\tdocument.removeEventListener(\"click\", this.handleClickOutside);\n\t}\n\n\t//If click is outside the dropdown button or display area\n\t//Close the dropdown\n\thandleClickOutside = (event) => {\n\t\tconst path = event.path || (event.composedPath && event.composedPath());\n\t\tconst { onChange } = this.props;\n\n\t\tif (\n\t\t\t!path.includes(this.displayAreaRef) &&\n\t\t\t!path.includes(this.dropTogglerRef)\n\t\t) {\n\t\t\tthis.setState({\n\t\t\t\tisOpen: false,\n\t\t\t});\n\n\t\t\tonChange && onChange(false);\n\t\t}\n\t};\n\n\t//Dropdown toggler\n\ttoggleDropDown = () => {\n\t\tconst { onChange } = this.props;\n\t\tconst { isOpen } = this.state;\n\t\tthis.setState({\n\t\t\tisOpen: !isOpen,\n\t\t});\n\n\t\tonChange && onChange(!isOpen);\n\t};\n\n\t//To control component\n\tcomponentDidUpdate() {\n\t\tif (this.props.isOpen !== this.state.isOpen) {\n\t\t\tthis.setState({\n\t\t\t\tisOpen: this.props.isOpen,\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { label, children } = this.props;\n\t\tconst { isOpen } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"dropdown-container relative\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"dropdown-toggler px-3 py-2 flex gap-2 items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75 ease-linear transition-all duration-150 \"\n\t\t\t\t\tonClick={this.toggleDropDown}\n\t\t\t\t\tref={(ref) => (this.dropTogglerRef = ref)}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t\t{isOpen ? <HideMenuIcon /> : <ShowMenuIcon />}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"dropdown-area absolute bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg mt-2\"\n\t\t\t\t\tref={(ref) => (this.displayAreaRef = ref)}\n\t\t\t\t>\n\t\t\t\t\t{isOpen && <div className=\"\">{children}</div>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Dropdown;\n","import React from \"react\";\nimport { BsEyeFill } from \"react-icons/bs\";\nimport { useDispatch } from \"react-redux\";\n\nimport { toggleView } from '../viewer/viewerSlice';\nimport { toggleEditMode } from \"../../app/appReducer\";\nimport Dropdown from \"../../atoms/Dropdown\";\n\nexport default function ViewDropdown(props) {\n  // dropdown props\n  const [dropdownPopoverShow, setDropdownPopoverShow] = React.useState(false);\n  // const btnDropdownRef = React.createRef();\n  // const popoverDropdownRef = React.createRef();\n  const dispatch = useDispatch();\n\n  // function openDropdownPopover() {\n  //   // createPopper(btnDropdownRef.current, popoverDropdownRef.current, {\n  //   //   placement: \"bottom-start\",\n  //   // });\n  //   setDropdownPopoverShow(true);\n  // }\n  function closeDropdownPopover() {\n    setDropdownPopoverShow(false);\n  }\n\n\n\n  return (\n    <>\n      {/* <div className=\"relative\">\n        <a\n          className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75 ease-linear transition-all duration-150 \"\n          href=\"#view\"\n          type=\"button\"\n          ref={btnDropdownRef}\n          onClick={() => {\n            dropdownPopoverShow\n              ? closeDropdownPopover()\n              : openDropdownPopover();\n          }}\n        >\n          <BsEyeFill className=\"text-lg leading-lg text-white opacity-75\" />\n          <span className=\"ml-2\">View</span>\n        </a>\n        <div\n          ref={popoverDropdownRef}\n          className={\n            (dropdownPopoverShow ? \"block \" : \"hidden \") +\n            \"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg mt-2\"\n          }\n          style={{ minWidth: \"12rem\" }}\n        >\n          <a\n            href=\"#tpl\"\n            className=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\n            onClick={(e) => {\n              e.preventDefault();\n              dispatch(toggleView(\"TPL\"));\n              dispatch(toggleEditMode({ type: \"view\" }));\n              closeDropdownPopover();\n            }}\n          >\n            Trading Profit & Loss\n          </a>\n          <a\n            href=\"#bs\"\n            className=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\n            onClick={(e) => {\n              e.preventDefault();\n              dispatch(toggleView(\"BS\"));\n              dispatch(toggleEditMode({ type: \"view\" }));\n              closeDropdownPopover();\n            }}\n          >\n            BalanceSheet\n          </a>\n          <a\n            href=\"#cs\"\n            className=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\n            onClick={(e) => {\n              e.preventDefault();\n              dispatch(toggleView(\"CS\"));\n              dispatch(toggleEditMode({ type: \"view\" }));\n              closeDropdownPopover();\n            }}\n          >\n            Computation Sheet\n          </a>\n        </div>\n      </div> */}\n      <Dropdown onChange={setDropdownPopoverShow} isOpen={dropdownPopoverShow}\n        label={<><BsEyeFill className=\"text-lg leading-lg text-white opacity-75\" />\n          <span>View</span></>}>\n        <a\n          href=\"#tpl\"\n          className=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\n          onClick={(e) => {\n            e.preventDefault();\n            dispatch(toggleView(\"TPL\"));\n            dispatch(toggleEditMode({ type: \"view\" }));\n            closeDropdownPopover();\n          }}\n        >\n          Trading Profit & Loss\n        </a>\n        <a\n          href=\"#bs\"\n          className=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\n          onClick={(e) => {\n            e.preventDefault();\n            dispatch(toggleView(\"BS\"));\n            dispatch(toggleEditMode({ type: \"view\" }));\n            closeDropdownPopover();\n          }}\n        >\n          BalanceSheet\n        </a>\n        <a\n          href=\"#cs\"\n          className=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\n          onClick={(e) => {\n            e.preventDefault();\n            dispatch(toggleView(\"CS\"));\n            dispatch(toggleEditMode({ type: \"view\" }));\n            closeDropdownPopover();\n          }}\n        >\n          Computation Sheet\n        </a>\n      </Dropdown>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { toggleEdit } from '../editor/editorSlice';\nimport { toggleEditMode } from \"../../app/appReducer\";\nimport Dropdown from \"../../atoms/Dropdown\";\nimport { FaEdit } from \"react-icons/fa\";\n\nexport default function EditDropdown(props) {\n    // dropdown props\n    const [dropdownPopoverShow, setDropdownPopoverShow] = React.useState(false);\n    const dispatch = useDispatch();\n    function closeDropdownPopover() {\n        setDropdownPopoverShow(false);\n    }\n\n\n\n    return (\n        <>\n            <Dropdown onChange={setDropdownPopoverShow} isOpen={dropdownPopoverShow}\n                label={<><FaEdit className=\"text-lg leading-lg text-white opacity-75\" />\n                    <span>Edit</span></>}>\n                <a\n                    href=\"#info\"\n                    className=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(toggleEdit(\"Info\"));\n                        dispatch(toggleEditMode({ type: \"edit\" }));\n                        closeDropdownPopover();\n                    }}\n                >\n                    Information\n                </a>\n                <a\n                    href=\"#t\"\n                    className=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(toggleEdit(\"T\"));\n                        dispatch(toggleEditMode({ type: \"edit\" }));\n                        closeDropdownPopover();\n                    }}\n                >\n                    Trading\n                </a>\n                <a\n                    href=\"#pl\"\n                    className=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(toggleEdit(\"PL\"));\n                        dispatch(toggleEditMode({ type: \"edit\" }));\n                        closeDropdownPopover();\n                    }}\n                >\n                    Profit & Loss\n                </a>\n                <a\n                    href=\"#bs\"\n                    className=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(toggleEdit(\"BS\"));\n                        dispatch(toggleEditMode({ type: \"edit\" }));\n                        closeDropdownPopover();\n                    }}\n                >\n                    BalanceSheet\n                </a>\n                <a\n                    href=\"#cs\"\n                    className=\"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(toggleEdit(\"CS\"));\n                        dispatch(toggleEditMode({ type: \"edit\" }));\n                        closeDropdownPopover();\n                    }}\n                >\n                    Computation Sheet\n                </a>\n            </Dropdown>\n        </>\n    );\n}\n","import React from 'react';\nimport {\n    FaBars as MenuIconToggler,\n    FaFileUpload as FileUploadIcon,\n    FaFileDownload as FileDownloadIcon,\n} from 'react-icons/fa';\nimport { FiUpload as UploadIcon } from 'react-icons/fi';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Modal from './Modal';\nimport ViewDropdown from '../molecules/dropdown/ViewDropdown';\nimport { updateData } from '../app/appReducer';\nimport { downloadFile } from '../utilities/downloadUtil';\nimport EditDropdown from '../molecules/dropdown/EditDropdown';\n\nexport default function Header({ printButton, setCurrentView, fixed }) {\n    const [navbarOpen, setNavbarOpen] = React.useState(false);\n    const [uploadModal, setUploadModal] = React.useState(false);\n    const jsonFileInputRef = React.createRef();\n    const dispatch = useDispatch();\n    const data = useSelector((state) => state.app.data);\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        if (jsonFileInputRef.current.files.length > 0) {\n            const file = jsonFileInputRef.current.files[0];\n            console.log(file);\n\n            if (file.type === \"application/json\") {\n                const reader = new FileReader();\n                reader.onload = function (e) {\n                    dispatch(updateData(JSON.parse(e.target.result)));\n                    setUploadModal(!uploadModal);\n                };\n                reader.readAsText(file);\n            } else {\n                alert('Please select a JSON File');\n            }\n        } else {\n            alert('Please select a file');\n        }\n    }\n\n    return (\n        <>\n            <nav className=\"relative flex flex-wrap items-center justify-between px-2 py-3 bg-green mb-3\">\n                <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\n                    <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\n                        <a\n                            className=\"text-sm font-bold leading-relaxed flex flex-row items-center gap-2 mr-4 py-2 whitespace-nowrap uppercase text-white\"\n                            href={process.env.PUBLIC_URL + '/'}\n                        >\n                            <img src={process.env.PUBLIC_URL + '/logo192.png'} alt=\"Hisabi Logo\" className=\"w-10\" />\n                            <span>Hisabi</span>\n                        </a>\n                        <button\n                            className=\"text-white cursor-pointer text-l leading-none px-4 py-2 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n                            type=\"button\"\n                            onClick={() => setNavbarOpen(!navbarOpen)}\n                        >\n                            <MenuIconToggler />\n                        </button>\n                    </div>\n                    <div\n                        className={'lg:flex flex-grow items-center' + (navbarOpen ? ' flex' : ' hidden')}\n                        id=\"example-navbar-danger\"\n                    >\n                        <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\n                            <li className=\"nav-item\">{printButton}</li>\n                            <li className=\"nav-item\">\n                                <ViewDropdown />\n                            </li>\n                            <li className=\"nav-item hidden\">\n                                <EditDropdown />\n                            </li>\n                            <li className=\"nav-item\">\n                                <a\n                                    className=\"px-3 py-2 flex gap-2 items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75\"\n                                    href=\"#upload\"\n                                    onClick={() => setUploadModal(!uploadModal)}\n                                >\n                                    <FileUploadIcon className=\"text-lg leading-lg text-white opacity-75\" />\n                                    <span>Upload</span>\n                                </a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a\n                                    className=\"px-3 py-2 flex gap-2 items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75\"\n                                    href=\"#upload\"\n                                    onClick={() => {\n                                        const filename = Date.now() + '-' + data.Info.Name + '-' + data.year + '.json';\n                                        downloadFile(data, filename);\n                                        console.log('File downloaded!!');\n                                    }}\n                                >\n                                    <FileDownloadIcon className=\"text-lg leading-lg text-white opacity-75\" />\n                                    <span>Download</span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n            {uploadModal ? (\n                <Modal\n                    modalTitle=\"JSON Data Upload\"\n                    yesBtn={null}\n                    noBtn={null}\n                    isActive={uploadModal}\n                    onClose={() => {\n                        setUploadModal(!uploadModal);\n                    }}\n                >\n                    <form id=\"upload-form\" onSubmit={handleSubmit}>\n                        <div className=\"form-group grid grid-cols-1 gap-2\">\n                            <label className=\"\" htmlFor=\"jsonFile\">\n                                Upload JSON file:{' '}\n                            </label>\n                            <input type=\"file\" name=\"jsonFile\" id=\"jsonFile\" ref={jsonFileInputRef} />\n                        </div>\n                        <div className=\"flex justify-center pt-5\">\n                            <button\n                                type=\"submit\"\n                                className=\"flex items-center text-xs uppercase font-bold leading-snug bg-green p-3 rounded text-white hover:bg-green-dark hover:opacity-75\"\n                            >\n                                {' '}\n                                <UploadIcon className=\"text-lg leading-lg\" />\n                                Upload\n                            </button>\n                        </div>\n                    </form>\n                </Modal>\n            ) : (\n                <></>\n            )}\n        </>\n    );\n}\n","import html2canvas from \"html2canvas\";\nimport { jsPDF } from \"jspdf\";\n\nconst downloadAsPDF = (rootElement, filename) => {\n    // const rootElement = document.querySelector(rootElementSelector);\n    html2canvas(rootElement).then((canvas) => {\n        const imgData = canvas.toDataURL(\"image/png\");\n        const pdf = new jsPDF();\n        pdf.addImage(imgData, \"JPEG\", 0, 0);\n        pdf.save(filename);\n    });\n};\n\nconst downloadFile = (data, filename)=> {\n    const contentType = \"application/octet-stream\";\n    if (!data) {\n        console.error(\" No data\");\n        return;\n    }\n\n    if (!filename) filename = \"filetodonwload.txt\";\n\n    if (typeof data === \"object\") {\n        data = JSON.stringify(data, undefined, 4);\n    }\n\n    var blob = new Blob([data], { type: contentType }),\n        e = document.createEvent(\"MouseEvents\"),\n        a = document.createElement(\"a\");\n\n    a.download = filename;\n    a.href = window.URL.createObjectURL(blob);\n    a.dataset.downloadurl = [contentType, a.download, a.href].join(\":\");\n    e.initMouseEvent(\n        \"click\",\n        true,\n        false,\n        window,\n        0,\n        0,\n        0,\n        0,\n        0,\n        false,\n        false,\n        false,\n        false,\n        0,\n        null\n    );\n    a.dispatchEvent(e);\n}\n\nexport { downloadFile, downloadAsPDF };","import bankAbbrev from \"../app/bank_abbrev.json\";\nimport suggestionCorpus from \"../app/suggestion_corpus.json\";\n\nfunction getObjectSum(obj) {\n    let sum = 0;\n    for (let value of Object.values(obj)) {\n        if (typeof value == \"number\") sum += value;\n        if (typeof value == \"object\") sum += getObjectSum(value);\n    }\n    return sum;\n}\n\nfunction formatCurrency(value) {\n    const formatter = new Intl.NumberFormat(\"hi-IN\", {\n        style: \"currency\",\n        currency: \"INR\",\n        notation: \"standard\",\n        currencySign: \"accounting\",\n        signDisplay: \"never\",\n    });\n\n    return formatter.format(value);\n}\n\nconst BSABankFilter = (data) => {\n    let filteredData = [],\n        bankData = {};\n    Object.entries(data).forEach((entry) => {\n        const regexBank = /(\\w+)\\s*,\\s*([\\w\\s]+)\\s*,\\s*([\\w\\s/-\\d]+)/;\n        const regexMatch = entry[0].match(regexBank);\n        const bankName =\n            (bankAbbrev[regexMatch[1]] || regexMatch[1]) + \", \" + regexMatch[2];\n        if (!bankData[bankName]) bankData[bankName] = [];\n        bankData[bankName].push({\n            name: regexMatch[3],\n            amount: formatCurrency(entry[1]),\n            valid: true,\n            underline: {\n                name: false,\n                amount: false,\n            },\n            height: 1,\n        });\n    });\n    Object.entries(bankData).forEach((entry) => {\n        filteredData.push({\n            name: entry[0],\n            amount: null,\n            valid: true,\n            underline: {\n                name: true,\n                amount: false,\n            },\n            height: 1,\n        });\n        filteredData.push(...entry[1]);\n    });\n    filteredData[filteredData.length - 1].underline.amount = true;\n    return filteredData;\n};\n\nconst BSFilter = (data) => {\n    const filteredData = {\n        success: false,\n        message: \"\",\n        data: {},\n    };\n\n    if (data.length === 0) {\n        filteredData.message = \"No data found\";\n        return filteredData;\n    }\n\n    const tradename = data.Info?.[\"Trade Name\"],\n        name = data.Info?.[\"Name\"],\n        address = [data.Info?.[\"Address 1\"], data.Info?.[\"Address 2\"]],\n        title =\n            (data.type === \"p\" ? \"Projected \" : \"\") +\n            \"Balance Sheet as at 31st March, \" +\n            data.year;\n\n    const assets = [],\n        liabilities = [];\n\n    if (data.BS) {\n        // Calculating Liabilities\n        Object.entries(data?.BS?.To).forEach((entry) => {\n            liabilities.push({\n                name: entry[0],\n                amount:\n                    typeof entry[1] === \"number\"\n                        ? formatCurrency(entry[1])\n                        : null,\n                valid: suggestionCorpus.BS.To.includes(entry[0]),\n                underline: {\n                    name: typeof entry[1] === \"object\",\n                    amount: false,\n                },\n                height: 0,\n            });\n            if (typeof entry[1] === \"object\") {\n                Object.entries(entry[1]).forEach((subEntry, i) => {\n                    liabilities.push({\n                        name:\n                            (subEntry[1] < 0\n                                ? \"Less. \"\n                                : i > 0\n                                ? \"Add. \"\n                                : \"\") + subEntry[0],\n                        amount:\n                            typeof subEntry[1] === \"number\"\n                                ? formatCurrency(subEntry[1])\n                                : null,\n                        valid: suggestionCorpus.BS.To.includes(subEntry[0]),\n                        underline: {\n                            name: false,\n                            amount: Object.entries(entry[1]).length - 1 === i,\n                        },\n                        height: 1,\n                    });\n                });\n                liabilities.push({\n                    name: \"\",\n                    amount: formatCurrency(getObjectSum(entry[1])),\n                    valid: true,\n                    underline: {\n                        name: false,\n                        amount: false,\n                    },\n                    height: 0,\n                });\n            }\n        });\n\n        // Calculating Assets\n        Object.entries(data?.BS?.By).forEach((entry) => {\n            assets.push({\n                name: entry[0],\n                amount:\n                    typeof entry[1] === \"number\"\n                        ? formatCurrency(entry[1])\n                        : null,\n                valid: suggestionCorpus.BS.By.includes(entry[0]),\n                underline: {\n                    name: typeof entry[1] === \"object\",\n                    amount: false,\n                },\n                height: 0,\n            });\n\n            if (typeof entry[1] === \"object\") {\n                if (entry[0] === \"Cash at Bank\") {\n                    assets.push(...BSABankFilter(entry[1]));\n                } else {\n                    Object.entries(entry[1]).forEach((subEntry, i) => {\n                        assets.push({\n                            name:\n                                (subEntry[1] < 0\n                                    ? \"Less. \"\n                                    : i > 0\n                                    ? \"Add. \"\n                                    : \"\") + subEntry[0],\n                            amount:\n                                typeof subEntry[1] === \"number\"\n                                    ? formatCurrency(subEntry[1])\n                                    : null,\n                            valid: suggestionCorpus.BS.By.includes(subEntry[0]),\n                            underline: {\n                                name: false,\n                                amount:\n                                    Object.entries(entry[1]).length - 1 === i,\n                            },\n                            height: 1,\n                        });\n                    });\n                }\n                assets.push({\n                    name: \"\",\n                    amount: formatCurrency(getObjectSum(entry[1])),\n                    valid: true,\n                    underline: {\n                        name: false,\n                        amount: false,\n                    },\n                    height: 0,\n                });\n            }\n        });\n    }\n\n    filteredData.data = {\n        tradename,\n        name,\n        address,\n        title,\n        liabilities,\n        assets,\n        total: [\n            data.BS ? formatCurrency(getObjectSum(data.BS.To)) : 0,\n            data.BS ? formatCurrency(getObjectSum(data.BS.By)) : 0,\n        ],\n    };\n    filteredData.success = true;\n    filteredData.message = \"Data successfully filtered.\";\n    return filteredData;\n};\n\nconst DepTPLFilter = (data) => {\n    const filteredData = [];\n\n    Object.entries(data).forEach((entry) => {\n        filteredData.push({\n            name: \"on \" + entry[0],\n            amount: formatCurrency(entry[1]),\n            valid: true,\n            underline: {\n                name: false,\n                amount: false,\n            },\n            height: 1,\n        });\n    });\n    filteredData[filteredData.length - 1].underline.amount = true;\n    return filteredData;\n};\n\nconst TPLFilter = (data) => {\n    const filteredData = {\n        success: false,\n        message: \"\",\n        data: {},\n    };\n\n    if (data.length === 0) {\n        filteredData.message = \"No data found\";\n        return filteredData;\n    }\n\n    const tradename = data.Info?.[\"Trade Name\"],\n        name = data.Info?.[\"Name\"],\n        address = [data.Info?.[\"Address 1\"], data.Info?.[\"Address 2\"]],\n        title =\n            (data.type === \"p\" ? \"Projected \" : \"\") +\n            (data.T ? \"Trading and \" : \"\") +\n            \"Profit & Loss Account for the year ending 31st March, \" +\n            data.year;\n\n    const t_to = [],\n        t_by = [],\n        pl_to = [],\n        pl_by = [];\n\n    // Calculating Trading To\n    if (data.T) {\n        Object.entries(data?.T?.To).forEach((entry) => {\n            t_to.push({\n                name: \"To \" + entry[0],\n                amount:\n                    typeof entry[1] === \"number\"\n                        ? formatCurrency(entry[1])\n                        : null,\n                valid: suggestionCorpus.T.To.includes(entry[0]),\n                underline: {\n                    name: typeof entry[1] === \"object\",\n                    amount: false,\n                },\n                height: 0,\n            });\n            if (typeof entry[1] === \"object\") {\n                Object.entries(entry[1]).forEach((subEntry, i) => {\n                    t_to.push({\n                        name:\n                            (subEntry[1] < 0\n                                ? \"Less. \"\n                                : i > 0\n                                ? \"Add. \"\n                                : \"\") + subEntry[0],\n                        amount:\n                            typeof subEntry[1] === \"number\"\n                                ? formatCurrency(subEntry[1])\n                                : null,\n                        valid: suggestionCorpus.T.To.includes(subEntry[0]),\n                        underline: {\n                            name: false,\n                            amount: Object.entries(entry[1]).length - 1 === i,\n                        },\n                        height: 1,\n                    });\n                });\n                t_to.push({\n                    name: \"\",\n                    amount: formatCurrency(getObjectSum(entry[1])),\n                    valid: true,\n                    underline: {\n                        name: false,\n                        amount: false,\n                    },\n                    height: 0,\n                });\n            }\n        });\n\n        // Calculating Trading By\n        Object.entries(data?.T?.By).forEach((entry) => {\n            t_by.push({\n                name: \"By \" + entry[0],\n                amount:\n                    typeof entry[1] === \"number\"\n                        ? formatCurrency(entry[1])\n                        : null,\n                valid: suggestionCorpus.T.By.includes(entry[0]),\n                underline: {\n                    name: typeof entry[1] === \"object\",\n                    amount: false,\n                },\n                height: 0,\n            });\n            if (typeof entry[1] === \"object\") {\n                Object.entries(entry[1]).forEach((subEntry, i) => {\n                    t_by.push({\n                        name:\n                            (subEntry[1] < 0\n                                ? \"Less. \"\n                                : i > 0\n                                ? \"Add. \"\n                                : \"\") + subEntry[0],\n                        amount:\n                            typeof subEntry[1] === \"number\"\n                                ? formatCurrency(subEntry[1])\n                                : null,\n                        valid: suggestionCorpus.T.By.includes(subEntry[0]),\n                        underline: {\n                            name: false,\n                            amount: Object.entries(entry[1]).length - 1 === i,\n                        },\n                        height: 1,\n                    });\n                });\n                t_by.push({\n                    name: \"\",\n                    amount: formatCurrency(getObjectSum(entry[1])),\n                    valid: true,\n                    underline: {\n                        name: false,\n                        amount: false,\n                    },\n                    height: 0,\n                });\n            }\n        });\n    }\n\n    if (data.PL) {\n        // Calculating Profit & Loss To\n        Object.entries(data?.PL?.To).forEach((entry) => {\n            pl_to.push({\n                name: \"To \" + entry[0],\n                amount:\n                    typeof entry[1] === \"number\"\n                        ? formatCurrency(entry[1])\n                        : null,\n                valid: suggestionCorpus.PL.To.includes(entry[0]),\n                underline: {\n                    name: typeof entry[1] === \"object\",\n                    amount: false,\n                },\n                height: 0,\n            });\n            if (typeof entry[1] === \"object\") {\n                if (entry[0] === \"Depreciation\") {\n                    pl_to.push(...DepTPLFilter(entry[1]));\n                } else {\n                    Object.entries(entry[1]).forEach((subEntry, i) => {\n                        pl_to.push({\n                            name:\n                                (subEntry[1] < 0\n                                    ? \"Less. \"\n                                    : i > 0\n                                    ? \"Add. \"\n                                    : \"\") + subEntry[0],\n                            amount:\n                                typeof subEntry[1] === \"number\"\n                                    ? formatCurrency(subEntry[1])\n                                    : null,\n                            valid: suggestionCorpus.PL.To.includes(subEntry[0]),\n                            underline: {\n                                name: false,\n                                amount:\n                                    Object.entries(entry[1]).length - 1 === i,\n                            },\n                            height: 1,\n                        });\n                    });\n                }\n                pl_to.push({\n                    name: \"\",\n                    amount: formatCurrency(getObjectSum(entry[1])),\n                    valid: true,\n                    underline: {\n                        name: false,\n                        amount: false,\n                    },\n                    height: 0,\n                });\n            }\n        });\n\n        // Calculating Profit & Loss By\n        Object.entries(data?.PL?.By).forEach((entry) => {\n            pl_by.push({\n                name: \"By \" + entry[0],\n                amount:\n                    typeof entry[1] === \"number\"\n                        ? formatCurrency(entry[1])\n                        : null,\n                valid: suggestionCorpus.PL.By.includes(entry[0]),\n                underline: {\n                    name: typeof entry[1] === \"object\",\n                    amount: false,\n                },\n                height: 0,\n            });\n            if (typeof entry[1] === \"object\") {\n                Object.entries(entry[1]).forEach((subEntry, i) => {\n                    pl_by.push({\n                        name:\n                            (subEntry[1] < 0\n                                ? \"Less. \"\n                                : i > 0\n                                ? \"Add. \"\n                                : \"\") + subEntry[0],\n                        amount:\n                            typeof subEntry[1] === \"number\"\n                                ? formatCurrency(subEntry[1])\n                                : null,\n                        valid: suggestionCorpus.PL.By.includes(subEntry[0]),\n                        underline: {\n                            name: false,\n                            amount: Object.entries(entry[1]).length - 1 === i,\n                        },\n                        height: 1,\n                    });\n                });\n                pl_by.push({\n                    name: \"\",\n                    amount: formatCurrency(getObjectSum(entry[1])),\n                    valid: true,\n                    underline: {\n                        name: false,\n                        amount: false,\n                    },\n                    height: 0,\n                });\n            }\n        });\n    }\n\n    filteredData.data = {\n        tradename,\n        name,\n        address,\n        title,\n        t_to,\n        t_by,\n        t_total: [\n            data.T ? formatCurrency(getObjectSum(data.T.To)) : 0,\n            data.T ? formatCurrency(getObjectSum(data.T.By)) : 0,\n        ],\n        pl_to,\n        pl_by,\n        pl_total: [\n            data.PL ? formatCurrency(getObjectSum(data.PL.To)) : 0,\n            data.PL ? formatCurrency(getObjectSum(data.PL.By)) : 0,\n        ],\n    };\n    filteredData.success = true;\n    filteredData.message = \"Data successfully filtered.\";\n    return filteredData;\n};\n\nconst CSFilter = (data) => {\n    let filteredData = {\n        success: false,\n        message: \"\",\n        data: {},\n    };\n\n    if (data.length === 0) {\n        filteredData.message = \"No data found\";\n        return filteredData;\n    }\n\n    const year = parseInt(data.year);\n    const name = data.Info?.[\"Name\"],\n        address = [data.Info?.[\"Address 1\"], data.Info?.[\"Address 2\"]],\n        pan = data.Info?.[\"PAN\"],\n        fyay = `FY - ${year - 1}-${year}, AY - ${year}-${year + 1}`,\n        cs_rows = [],\n        title =\n            (data.type === \"p\" ? \"Projected \" : \"\") +\n            \"Computation of Total Income\";\n    // Constants\n    const nonDeductableFields = [\"Deductions\"],\n        nullableFields = [\"Tax there on\", \"Tax Refund\", \"Tax Payable\"];\n\n    Object.entries(data?.CS).forEach((entry) => {\n        if (nullableFields.includes(entry[0]) && entry[1] === 0) {\n            cs_rows[cs_rows.length - 1].underline.amount = true;\n            cs_rows.push({\n                name: entry[0],\n                amount: typeof entry[1] === \"number\" ? \"NIL\" : null,\n                valid: suggestionCorpus.CS.includes(entry[0]),\n                underline: {\n                    name: false,\n                    amount: true,\n                },\n                height: 0,\n            });\n        } else {\n            cs_rows.push({\n                name: entry[0],\n                amount:\n                    typeof entry[1] === \"number\"\n                        ? formatCurrency(entry[1])\n                        : null,\n                valid: suggestionCorpus.CS.includes(entry[0]),\n                underline: {\n                    name: false,\n                    amount: false,\n                },\n                height: 0,\n            });\n        }\n\n        if (typeof entry[1] === \"object\") {\n            Object.entries(entry[1]).forEach((subEntry, i) => {\n                cs_rows.push({\n                    name:\n                        (!nonDeductableFields.includes(entry[0]) && i > 0\n                            ? subEntry[1] < 0\n                                ? \"Less. \"\n                                : \"Add. \"\n                            : \"\") + subEntry[0],\n                    amount:\n                        typeof subEntry[1] === \"number\"\n                            ? formatCurrency(subEntry[1])\n                            : null,\n                    valid: suggestionCorpus.CS.includes(subEntry[0]),\n                    underline: {\n                        name: false,\n                        amount: Object.entries(entry[1]).length - 1 === i,\n                    },\n                    height: 1,\n                });\n            });\n            cs_rows.push({\n                name: \"\",\n                amount: formatCurrency(getObjectSum(entry[1])),\n                valid: true,\n                underline: {\n                    name: false,\n                    amount: false,\n                },\n                height: 0,\n            });\n        }\n    });\n\n    filteredData.data = {\n        title,\n        name,\n        pan,\n        address,\n        fyay,\n        cs_rows,\n    };\n\n    filteredData.success = true;\n    filteredData.message = \"Data successfully filtered.\";\n    return filteredData;\n};\n\nexport {\n    getObjectSum,\n    formatCurrency,\n    BSFilter,\n    BSABankFilter,\n    TPLFilter,\n    DepTPLFilter,\n    CSFilter,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { TPLFilter } from '../../utilities/filterUtil';\n\nconst mapStateToProps = (state, ownProps) => {\n    const { data } = state.app;\n    return {\n        data: data,\n        ...ownProps\n    };\n};\n\nclass TPLView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tradename: \"Trade Name\",\n            name: \"Name\",\n            address: [\"Address1\", \"Address2\"],\n            title: \"Title\",\n            t_to: [],\n            t_by: [],\n            t_total: [\"₹0.00\", \"₹0.00\"],\n            pl_to: [],\n            pl_by: [],\n            pl_total: [\"₹0.00\", \"₹0.00\"],\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const filteredData = TPLFilter(nextProps.data);\n        if (filteredData.success) {\n            const {\n                tradename,\n                name,\n                address,\n                title,\n                t_to,\n                t_by,\n                t_total,\n                pl_to,\n                pl_by,\n                pl_total,\n            } = filteredData.data;\n            return {\n                tradename,\n                name,\n                address,\n                title,\n                t_to,\n                t_by,\n                t_total,\n                pl_to,\n                pl_by,\n                pl_total,\n            };\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"tpl-view print-view\">\n                <div className=\"text-center\">\n                    <div className=\"tradeName\">{this.state.tradename}</div>\n                    {this.state.tradename !== this.state.name ? <div className=\"name\">Prop - {this.state.name}</div> : <></>}\n                    <div className=\"address1\">{this.state.address[0]}</div>\n                    <div className=\"underline address2\">{this.state.address[1]}</div>\n                    <div className=\"underline title\">{this.state.title}</div>\n                </div>\n                <div className=\"h-container\">\n                    <div className=\"grid grid-cols-2\">\n                        <div className=\"grid grid-cols-2 px-1\">\n                            <div className=\"text-left underline\">Particulars</div>\n                            <div className=\"text-right underline\">Amount</div>\n                        </div>\n\n                        <div className=\"grid grid-cols-2 px-1\">\n                            <div className=\"text-left underline\">Particulars</div>\n                            <div className=\"text-right underline\">Amount</div>\n                        </div>\n                    </div>\n                </div>\n\n                {('T' in this.props.data) ?\n                    <div className=\"t-container mb-4 text-sm\">\n                        <div className=\"grid grid-cols-2\">\n                            {/* Trading To */}\n                            <div className=\"px-1\">\n                                {this.state.t_to.map(\n                                    (to, index) => {\n                                        return (\n                                            <div\n                                                className={\n                                                    \"grid grid-cols-2 px-\" +\n                                                    to.height * 4 +\n                                                    (to.valid\n                                                        ? \"\"\n                                                        : \" bg-red-light\")\n                                                }\n                                                key={index}\n                                            >\n                                                <div\n                                                    className={\n                                                        \"text-left\" +\n                                                        (to.underline\n                                                            .name\n                                                            ? \" underline\"\n                                                            : \"\")\n                                                    }\n                                                >\n                                                    {to.name}\n                                                </div>\n                                                <div\n                                                    className={\n                                                        \"text-right\" +\n                                                        (to.underline\n                                                            .amount\n                                                            ? \" accounting-col border-2 border-t-0 border-l-0 border-r-0 border-current\"\n                                                            : \"\")\n                                                    }\n                                                >\n                                                    {to.amount}\n                                                </div>\n                                            </div>\n                                        );\n                                    }\n                                )}\n                            </div>\n                            {/* \\Trading To */}\n\n                            {/* Trading By */}\n                            <div className=\"px-1\">\n                                {this.state.t_by.map(\n                                    (by, index) => {\n                                        return (\n                                            <div\n                                                className={\n                                                    \"grid grid-cols-2 px-\" +\n                                                    by.height * 4 +\n                                                    (by.valid\n                                                        ? \"\"\n                                                        : \" bg-red-light\")\n                                                }\n                                                key={index}\n                                            >\n                                                <div\n                                                    className={\n                                                        \"text-left\" +\n                                                        (by.underline\n                                                            .name\n                                                            ? \" underline\"\n                                                            : \"\")\n                                                    }\n                                                >\n                                                    {by.name}\n                                                </div>\n                                                <div\n                                                    className={\n                                                        \"text-right\" +\n                                                        (by.underline\n                                                            .amount\n                                                            ? \" accounting-col border-2 border-t-0 border-l-0 border-r-0 border-current\"\n                                                            : \"\")\n                                                    }\n                                                >\n                                                    {by.amount}\n                                                </div>\n                                            </div>\n                                        );\n                                    }\n                                )}\n                            </div>\n                            {/* \\Trading By */}\n\n                        </div>\n\n                        <div className=\"grid grid-cols-2\">\n                            <div className=\"px-1\">\n                                <div className=\"grid grid-cols-2\">\n                                    <div className=\"\"></div>\n                                    <div className=\"text-right\">\n                                        <span className=\"accounting-col border-2 border-l-0 border-r-0 border-current\">\n                                            {this.state.t_total[0]}\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"px-1\">\n                                <div className=\"grid grid-cols-2\">\n                                    <div className=\"\"></div>\n                                    <div className=\"text-right\">\n                                        <span className=\"accounting-col border-2 border-l-0 border-r-0 border-current\">\n                                            {this.state.t_total[1]}\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                    : ''}\n\n                {('PL' in this.props.data) ?\n                    <div className=\"pl-container mb-4 text-sm\">\n                        <div className=\"grid grid-cols-2\">\n                            {/* PL To */}\n                            <div className=\"px-1\">\n                                {this.state.pl_to.map(\n                                    (to, index) => {\n                                        return (\n                                            <div\n                                                className={\n                                                    \"grid grid-cols-2 px-\" +\n                                                    to.height * 4 +\n                                                    (to.valid\n                                                        ? \"\"\n                                                        : \" bg-red-light\")\n                                                }\n                                                key={index}\n                                            >\n                                                <div\n                                                    className={\n                                                        \"text-left\" +\n                                                        (to.underline\n                                                            .name\n                                                            ? \" underline\"\n                                                            : \"\")\n                                                    }\n                                                >\n                                                    {to.name}\n                                                </div>\n                                                <div\n                                                    className={\n                                                        \"text-right\" +\n                                                        (to.underline\n                                                            .amount\n                                                            ? \" accounting-col border-2 border-t-0 border-l-0 border-r-0 border-current\"\n                                                            : \"\")\n                                                    }\n                                                >\n                                                    {to.amount}\n                                                </div>\n                                            </div>\n                                        );\n                                    }\n                                )}\n                            </div>\n                            {/* \\PL To */}\n\n                            {/* PL By */}\n                            <div className=\"px-1\">\n                                {this.state.pl_by.map(\n                                    (by, index) => {\n                                        return (\n                                            <div\n                                                className={'grid grid-cols-2 px-' + by.height * 4 + (by.valid ? \"\" : \" bg-red-light\")}\n                                                key={index}\n                                            >\n                                                <div\n                                                    className={\n                                                        \"text-left\" +\n                                                        (by.underline\n                                                            .name\n                                                            ? \" underline\"\n                                                            : \"\")\n                                                    }\n                                                >\n                                                    {by.name}\n                                                </div>\n                                                <div\n                                                    className={\n                                                        \"text-right\" +\n                                                        (by.underline\n                                                            .amount\n                                                            ? \" accounting-col border-2 border-t-0 border-l-0 border-r-0 border-current\"\n                                                            : \"\")\n                                                    }\n                                                >\n                                                    {by.amount}\n                                                </div>\n                                            </div>\n                                        );\n                                    }\n                                )}\n                                {/* {\n                                    Object.keys(this.props.data.PL.By).map((keyName, i) => {\n                                        return (\n                                            <React.Fragment key={i}>\n                                                <div className=\"grid grid-cols-2\">\n                                                    <div className=\"text-left\">By {keyName}</div>\n                                                    <div className=\"text-right\">{typeof this.props.data.PL.By[keyName] == 'number' ? formatCurrency(this.props.data.PL.By[keyName]) : \"\"}</div>\n                                                </div>\n                                                {typeof this.props.data.PL.By[keyName] == 'object' ?\n                                                    <React.Fragment>\n                                                        {Object.keys(this.props.data.PL.By[keyName]).map((key, ind) => (\n                                                            <div className=\"grid grid-cols-2\" key={ind}>\n                                                                <div className=\"text-left pl-4\">on {key}</div>\n                                                                <div className=\"text-right pr-4\">\n                                                                    <span className={(Object.keys(this.props.data.PL.By[keyName])[Object.keys(this.props.data.PL.By[keyName]).length - 1] === key ? 'inline-block accounting-col border-2 border-t-0 border-l-0 border-r-0 border-current' : '')}>\n                                                                        {typeof this.props.data.PL.By[keyName][key] == 'number' ? formatCurrency(this.props.data.PL.By[keyName][key]) : \"\"}\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        ))}\n                                                        <div className=\"grid grid-cols-2\">\n                                                            <div className=\"\"></div>\n                                                            <div className=\"text-right\">{formatCurrency(getObjectSum(this.props.data.PL.By[keyName]))}</div>\n                                                        </div>\n                                                    </React.Fragment>\n                                                    : <></>}\n                                            </React.Fragment>\n                                        );\n                                    })\n                                } */}\n                            </div>\n                            {/* \\PL By */}\n\n                        </div>\n\n                        <div className=\"grid grid-cols-2\">\n                            <div className=\"px-1\">\n                                <div className=\"grid grid-cols-2\">\n                                    <div className=\"\"></div>\n                                    <div className=\"text-right\">\n                                        <span className=\"accounting-col border-2 border-l-0 border-r-0 border-current\">\n                                            {this.state.pl_total[0]}\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"px-1\">\n                                <div className=\"grid grid-cols-2\">\n                                    <div className=\"\"></div>\n                                    <div className=\"text-right\">\n                                        <span className=\"accounting-col border-2 border-l-0 border-r-0 border-current\">\n                                            {this.state.pl_total[1]}\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                    : ''}\n\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(TPLView);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    BSFilter,\n} from \"../../utilities/filterUtil\";\n\nconst mapStateToProps = (state, ownProps) => {\n    const { data } = state.app;\n    return {\n        data: data,\n        ...ownProps,\n    };\n};\n\nclass BSView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tradename: \"Trade Name\",\n            name: \"Name\",\n            address: [\"Address1\", \"Address2\"],\n            title: \"Title\",\n            assets: [],\n            liabilities: [],\n            total: [\"₹0.00\", \"₹0.00\"],\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const filteredData = BSFilter(nextProps.data);\n        if (filteredData.success) {\n            const {\n                tradename,\n                name,\n                address,\n                title,\n                assets,\n                liabilities,\n                total,\n            } = filteredData.data;\n            return {\n                tradename,\n                name,\n                address,\n                title,\n                liabilities,\n                assets,\n                total,\n            };\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"bs-view print-view\">\n                <div className=\"text-center\">\n                    <div className=\"tradeName\">{this.state.tradename}</div>\n                    {this.state.tradename !== this.state.name ? <div className=\"name\">Prop - {this.state.name}</div> : <></>}\n                    <div className=\"address1\">{this.state.address[0]}</div>\n                    <div className=\"underline address2\">\n                        {this.state.address[1]}\n                    </div>\n                    <div className=\"underline title\">{this.state.title}</div>\n                </div>\n\n                <div className=\"h-container\">\n                    <div className=\"grid grid-cols-2\">\n                        <div className=\"grid grid-cols-2 px-1\">\n                            <div className=\"text-left underline\">\n                                Liabilities\n                            </div>\n                            <div className=\"text-right underline\">Amount</div>\n                        </div>\n\n                        <div className=\"grid grid-cols-2 px-1\">\n                            <div className=\"text-left underline\">Assets</div>\n                            <div className=\"text-right underline\">Amount</div>\n                        </div>\n                    </div>\n                </div>\n\n                {\"BS\" in this.props.data ? (\n                    <div className=\"t-container mb-4 text-sm\">\n                        <div className=\"grid grid-cols-2\">\n                            {/* Balance Sheet To */}\n                            <div className=\"px-1\">\n                                {this.state.liabilities.map(\n                                    (liability, index) => {\n                                        return (\n                                            <div\n                                                className={\n                                                    \"grid grid-cols-2 px-\" +\n                                                    liability.height * 4 +\n                                                    (liability.valid\n                                                        ? \"\"\n                                                        : \" bg-red-light\")\n                                                }\n                                                key={index}\n                                            >\n                                                <div\n                                                    className={\n                                                        \"text-left\" +\n                                                        (liability.underline\n                                                            .name\n                                                            ? \" underline\"\n                                                            : \"\")\n                                                    }\n                                                >\n                                                    {liability.name}\n                                                </div>\n                                                <div\n                                                    className={\n                                                        \"text-right\" +\n                                                        (liability.underline\n                                                            .amount\n                                                            ? \" accounting-col border-2 border-t-0 border-l-0 border-r-0 border-current\"\n                                                            : \"\")\n                                                    }\n                                                >\n                                                    {liability.amount}\n                                                </div>\n                                            </div>\n                                        );\n                                    }\n                                )}\n                            </div>\n                            {/* \\Balance Sheet To */}\n\n                            {/* Balance Sheet By */}\n                            <div className=\"px-1\">\n                                {this.state.assets.map((asset, index) => {\n                                    return (\n                                        <div\n                                            className={\n                                                \"grid grid-cols-2 px-\" +\n                                                asset.height * 4 +\n                                                (asset.valid\n                                                    ? \"\"\n                                                    : \" bg-red-light\")\n                                            }\n                                            key={index}\n                                        >\n                                            <div\n                                                className={\n                                                    \"text-left\" +\n                                                    (asset.underline.name\n                                                        ? \" underline\"\n                                                        : \"\")\n                                                }\n                                            >\n                                                {asset.name}\n                                            </div>\n                                            <div\n                                                className={\n                                                    \"text-right\" +\n                                                    (asset.underline.amount\n                                                        ? \" accounting-col border-2 border-t-0 border-l-0 border-r-0 border-current\"\n                                                        : \"\")\n                                                }\n                                            >\n                                                {asset.amount}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                            {/* \\Balance Sheet By */}\n                        </div>\n\n                        <div className=\"grid grid-cols-2\">\n                            <div className=\"px-1\">\n                                <div className=\"grid grid-cols-2\">\n                                    <div className=\"\"></div>\n                                    <div className=\"text-right\">\n                                        <span className=\"accounting-col border-2 border-l-0 border-r-0 border-current\">\n                                            {this.state.total[0]}\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"px-1\">\n                                <div className=\"grid grid-cols-2\">\n                                    <div className=\"\"></div>\n                                    <div className=\"text-right\">\n                                        <span className=\"accounting-col border-2 border-l-0 border-r-0 border-current\">\n                                            {this.state.total[1]}\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                    \"\"\n                )}\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(BSView);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CSFilter } from \"../../utilities/filterUtil\";\n\nconst mapStateToProps = (state, ownProps) => {\n    const { data } = state.app;\n    return {\n        data: data,\n        ...ownProps\n    };\n};\n\nclass CSView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"Name\",\n            pan: \"PAN\",\n            address: [\"Address1\", \"Address2\"],\n            fyay: \"FY - 2009-10, AY - 2010-11\",\n            cs_rows: []\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const filteredData = CSFilter(nextProps.data);\n\n        if (filteredData.success) {\n            const { title, name, pan, address, fyay, cs_rows } = filteredData.data;\n            return {\n                title,\n                name,\n                pan,\n                address,\n                fyay,\n                cs_rows\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"cs-view print-view\">\n                <div className=\"text-center\">\n                    <div className=\"name uppercase\">{this.state.name}</div>\n                    <div className=\"pan\">PAN - {this.state.pan}</div>\n                    <div className=\"address1\">\n                        {this.state.address[0]}\n                    </div>\n                    <div className=\"underline address2\">\n                        {this.state.address[1]}\n                    </div>\n                    <div className=\"fyay\">\n                        {this.state.fyay}\n                    </div>\n                    <div className=\"underline title\">\n                        {this.state.title}\n                    </div>\n                </div>\n\n                <div className=\"cs-container\">\n                    {/* CS Rows */}\n                    <div className=\"px-1\" style={{ width: \"600px\", margin: \"auto\" }}>\n\n                        {this.state.cs_rows.map((row, index) => {\n                            return (\n                                <div\n                                    className={\n                                        \"grid grid-cols-2 px-\" +\n                                        row.height * 4 +\n                                        (row.valid\n                                            ? \"\"\n                                            : \" bg-red-light\")\n                                    }\n                                    key={index}\n                                >\n                                    <div\n                                        className={\n                                            \"text-left\" +\n                                            (row.underline\n                                                .name\n                                                ? \" underline\"\n                                                : \"\")\n                                        }\n                                    >\n                                        {row.name}\n                                    </div>\n                                    <div\n                                        className={\n                                            \"text-right\" +\n                                            (row.underline\n                                                .amount\n                                                ? \" accounting-col border-2 border-t-0 border-l-0 border-r-0 border-current\"\n                                                : \"\")\n                                        }\n                                    >\n                                        {row.amount}\n                                    </div>\n                                </div>\n                            );\n                        })}\n\n                        {/* {\n                                Object.keys(this.props.data.CS).map((keyName, i) => {\n                                    return (\n                                        <React.Fragment key={i}>\n                                            <div className=\"grid grid-cols-2\" >\n                                                <div className=\"text-left\">{keyName}</div>\n                                                <div className=\"text-right\">\n                                                    <span className={(keyName === \"Tax Payable\" ? \"accounting-col border-2 border-current border-r-0 border-l-0\" : \"\")}>\n                                                        {typeof this.props.data.CS[keyName] == 'number' ? (this.props.data.CS[keyName] === 0 ? \"NIL\" : formatCurrency(this.props.data.CS[keyName])) : \"\"}\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            {typeof this.props.data.CS[keyName] == 'object' ?\n                                                <React.Fragment>\n                                                    {Object.keys(this.props.data.CS[keyName]).map((key, ind) => (\n                                                        <div className=\"grid grid-cols-2\" key={ind}>\n                                                            <div className=\"text-left pl-4\">{key}</div>\n                                                            <div className=\"text-right pr-4\">\n                                                                <span className={(Object.keys(this.props.data.CS[keyName])[Object.keys(this.props.data.CS[keyName]).length - 1] === key ? 'accounting-col border-2 border-t-0 border-l-0 border-r-0 border-current' : '')}>\n                                                                    {typeof this.props.data.CS[keyName][key] === 'number' ? (this.props.data.CS[keyName][key] === 0 ? \"NIL\" : formatCurrency(this.props.data.CS[keyName][key])) : \"\"}\n                                                                </span>\n                                                            </div>\n                                                        </div>\n                                                    ))}\n                                                    <div className=\"grid grid-cols-2\">\n                                                        <div className=\"\"></div>\n                                                        <div className=\"text-right\">{this.props.data.CS[keyName] === 0 ? \"NIL\" : formatCurrency(getObjectSum(this.props.data.CS[keyName]))}</div>\n                                                    </div>\n                                                </React.Fragment>\n                                                : <></>}\n                                        </React.Fragment>\n                                    );\n                                })\n                            } */}\n                    </div>\n                    {/* \\CS Rows */}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(CSView);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport TPLView from './TPLView';\nimport BSView from './BSView';\nimport CSView from './CSView';\n\nconst Viewer = React.forwardRef(({ isActive, ...props }, ref) => {\n    const view = useSelector((state) => state.viewer.view);\n    if (!isActive)\n        return null;\n    return (\n        <div className=\"viewer\" ref={ref}>\n            {view === \"TPL\" ? (\n                <TPLView />\n            ) : (\n                <></>\n            )}\n            {view === \"BS\" ? (\n                <BSView />\n            ) : (\n                <></>\n            )}\n            {view === \"CS\" ? (\n                <CSView />\n            ) : (\n                <></>\n            )}\n        </div>\n    );\n});\n\nViewer.propTypes = {\n    children: PropTypes.node,\n    isActive: PropTypes.bool.isRequired\n};\n\nViewer.defaultProps = {\n    isActive: true\n};\n\nexport default Viewer;\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import { FaEye, FaPencilAlt } from 'react-icons/fa';\n\nclass EditableFormGroup extends Component {\n\tstatic propTypes = {\n\t\tkeyName: PropTypes.string,\n\t\tsheetName: PropTypes.string,\n\t\tvalue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\t\thandleChange: PropTypes.func,\n\t\thandleKeyChange: PropTypes.func,\n\t\teditableKey: PropTypes.bool,\n\t};\n\n\tstatic defaultProps = {\n\t\tkeyName: 'Key',\n\t\tsheetName: 'Info',\n\t\tvalue: '0',\n\t\teditableKey: true,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconst { keyName, value } = props;\n\t\tthis.state = {\n\t\t\tisKeyEditable: false,\n\t\t\tisValueEditable: false,\n\t\t\tvalueInputValue: value,\n\t\t\tkeyInputValue: keyName,\n\t\t};\n\t}\n\n\thandleClickOutside(event) {\n\t\t// const path = event.path || (event.composedPath && event.composedPath());\n\n\t\tconst newState = this.state;\n\t\tif (this.state.isValueEditable) newState.isValueEditable = false;\n\t\tif (this.state.isKeyEditable) newState.isKeyEditable = false;\n\t\tthis.setState(newState);\n\t}\n\n\tupdateKey() {\n\t\tif (!this.props.editableKey) return;\n\t\tconst { sheetName, handleKeyChange, keyName } = this.props;\n\t\tconst newState = this.state;\n\t\tnewState.isKeyEditable = !this.state.isKeyEditable;\n\t\tif (!this.state.isKeyEditable) {\n\t\t\thandleKeyChange({ key: keyName, newKey: this.state.keyInputValue, sheet: sheetName });\n\t\t}\n\t\tthis.setState(newState);\n\t}\n\n\tupdateValue() {\n\t\tconst { sheetName, handleChange, keyName } = this.props;\n\t\tconst newState = this.state;\n\t\tnewState.isValueEditable = !this.state.isValueEditable;\n\t\tif (!this.state.isValueEditable) {\n\t\t\thandleChange({ key: keyName, value: this.state.valueInputValue, sheet: sheetName });\n\t\t}\n\t\tthis.setState(newState);\n\t}\n\n\trender() {\n\t\tconst { keyName, value } = this.props;\n\t\tconst { isValueEditable, isKeyEditable, valueInputValue, keyInputValue } = this.state;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{isKeyEditable ? (\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"p-2\"\n\t\t\t\t\t\tname={keyName + 'Key'}\n\t\t\t\t\t\tvalue={keyInputValue}\n\t\t\t\t\t\tonChange={(evt) => {\n\t\t\t\t\t\t\tconst newState = this.state;\n\t\t\t\t\t\t\tnewState.keyInputValue = evt.target.value;\n\t\t\t\t\t\t\tthis.setState(newState);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonDoubleClick={() => {\n\t\t\t\t\t\t\tthis.updateKey();\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName=\"p-2 w-full\"\n\t\t\t\t\t\thtmlFor={keyName}\n\t\t\t\t\t\tonDoubleClick={() => {\n\t\t\t\t\t\t\tif (!this.props.editableKey) return;\n\t\t\t\t\t\t\tconst newState = this.state;\n\t\t\t\t\t\t\tnewState.isKeyEditable = true;\n\t\t\t\t\t\t\tnewState.keyInputValue = keyName;\n\t\t\t\t\t\t\tthis.setState(newState);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{keyName}\n\t\t\t\t\t</label>\n\t\t\t\t)}\n\t\t\t\t{isValueEditable ? (\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"p-2\"\n\t\t\t\t\t\tname={keyName + 'Value'}\n\t\t\t\t\t\tvalue={valueInputValue}\n\t\t\t\t\t\tonChange={(evt) => {\n\t\t\t\t\t\t\tconst newState = this.state;\n\t\t\t\t\t\t\tnewState.valueInputValue = evt.target.value;\n\t\t\t\t\t\t\tthis.setState(newState);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonDoubleClick={() => {\n\t\t\t\t\t\t\tthis.updateValue();\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName=\"p-2\"\n\t\t\t\t\t\tonDoubleClick={() => {\n\t\t\t\t\t\t\tconst newState = this.state;\n\t\t\t\t\t\t\tnewState.isValueEditable = true;\n\t\t\t\t\t\t\tnewState.valueInputValue = value;\n\t\t\t\t\t\t\tthis.setState(newState);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{value}\n\t\t\t\t\t</span>\n\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default EditableFormGroup;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FaPlusCircle as AddIcon, FaTimesCircle as DeleteIcon } from 'react-icons/fa';\nimport { updateSheet, updateSheetKey, addSheetRow } from '../../app/appReducer';\nimport Modal from '../../atoms/Modal';\nimport EditableFormGroup from '../../atoms/EditableFormGroup';\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst { data } = state.app;\n\treturn {\n\t\tdata: data,\n\t\t...ownProps,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\tupdateSheet: (data) => {\n\t\tdispatch(updateSheet(data));\n\t},\n\tupdateSheetKey: (data) => {\n\t\tdispatch(updateSheetKey(data));\n\t},\n\taddSheetRow: (data) => {\n\t\tdispatch(addSheetRow(data));\n\t},\n});\n\nclass TEdit extends Component {\n\tstatic propTypes = {\n\t\tchildren: PropTypes.node,\n\t};\n\n\tstate = {\n\t\tshowModal: false,\n\t\tcurrentSheet: 'T.To',\n\t\tkeyInputValue: '',\n\t\tvalueInputValue: '0',\n\t};\n\n\thandleSubmit(evt) {\n\t\tevt.preventDefault();\n\t\tconst { keyInputValue, valueInputValue, currentSheet } = this.state;\n\t\tconst { addSheetRow } = this.props;\n\t\tconst data = {\n\t\t\tkey: keyInputValue,\n\t\t\tvalue: valueInputValue,\n\t\t\tsheet: currentSheet,\n\t\t};\n\t\taddSheetRow(data);\n\t}\n\n\topenModal(evt) {\n\t\tevt.preventDefault();\n\t\tconst newState = this.state;\n\t\tnewState.keyInputValue = '';\n\t\tnewState.valueInputValue = '0';\n\t\tnewState.showModal = true;\n\t\tthis.setState(newState);\n\t}\n\n\tcloseModal(evt) {\n\t\tevt.preventDefault();\n\t\tconst newState = this.state;\n\t\tnewState.showModal = false;\n\t\tthis.setState(newState);\n\t}\n\n\trender() {\n\t\tconst { T } = this.props.data;\n\t\tconst { showModal, currentSheet, valueInputValue, keyInputValue } = this.state;\n\t\treturn (\n\t\t\t<div className=\"tpl-edit edit-view\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"form-container flex flex-col items-center justify-center mx-auto bg-green-light p-2\"\n\t\t\t\t\tstyle={{ maxWidth: '800px' }}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"flex-1 text-center underline uppercase text-lg\">Trading</div>\n\t\t\t\t\t<div className=\"grid grid-cols-2 gap-6\">\n\t\t\t\t\t\t<div className=\"to-column grid grid-cols-2 gap-4\">\n\t\t\t\t\t\t\t<span>To</span>\n\t\t\t\t\t\t\t<span>Amount</span>\n\t\t\t\t\t\t\t{Object.keys(T.To).map((keyName, ind) => (\n\t\t\t\t\t\t\t\t<React.Fragment key={ind}>\n\t\t\t\t\t\t\t\t\t<EditableFormGroup\n\t\t\t\t\t\t\t\t\t\tkeyName={keyName}\n\t\t\t\t\t\t\t\t\t\tvalue={T.To[keyName]}\n\t\t\t\t\t\t\t\t\t\tsheetName=\"T.To\"\n\t\t\t\t\t\t\t\t\t\thandleChange={this.props.updateSheet}\n\t\t\t\t\t\t\t\t\t\thandleKeyChange={this.props.updateSheetKey}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\t\t\t\t// this.setState({ currentSheet: 'T.To' });\n\t\t\t\t\t\t\t\t\tthis.openModal(evt);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tname=\"T.To\"\n\t\t\t\t\t\t\t\tclassName=\"bg-blue-500 col-span-2 text-sm font-bold leading-relaxed p-3 py-2 whitespace-nowrap uppercase text-white flex gap-2 items-center\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<AddIcon /> <span>Add Row</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"to-column grid grid-cols-2 gap-4\">\n\t\t\t\t\t\t\t<span>From</span>\n\t\t\t\t\t\t\t<span>Amount</span>\n\t\t\t\t\t\t\t{Object.keys(T.By).map((keyName, ind) => (\n\t\t\t\t\t\t\t\t<React.Fragment key={ind}>\n\t\t\t\t\t\t\t\t\t<EditableFormGroup\n\t\t\t\t\t\t\t\t\t\tkeyName={keyName}\n\t\t\t\t\t\t\t\t\t\tvalue={T.By[keyName]}\n\t\t\t\t\t\t\t\t\t\tsheetName=\"T.By\"\n\t\t\t\t\t\t\t\t\t\thandleChange={this.props.updateSheet}\n\t\t\t\t\t\t\t\t\t\thandleKeyChange={this.props.updateSheetKey}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\t\t\t\t// this.setState({ currentSheet: 'T.By' });\n\t\t\t\t\t\t\t\t\tthis.openModal(evt);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName=\"bg-blue-500 col-span-2 text-sm font-bold leading-relaxed p-3 py-2 whitespace-nowrap uppercase text-white flex gap-2 items-center\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<AddIcon /> <span>Add Row</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Modal\n\t\t\t\t\tmodalTitle=\"Add Field\"\n\t\t\t\t\tisActive={showModal}\n\t\t\t\t\tyesBtn={\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tclassName=\"flex gap-2 items-center text-xs uppercase font-bold leading-snug bg-green p-3 rounded text-white hover:opacity-75\"\n\t\t\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\t\t\tthis.handleSubmit(evt);\n\t\t\t\t\t\t\t\tthis.closeModal(evt);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AddIcon className=\"text-lg leading-lg\" />\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t\tnoBtn={\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"reset\"\n\t\t\t\t\t\t\tclassName=\"flex gap-2 items-center text-xs uppercase font-bold leading-snug border border-gray-dark p-3 rounded text-gray-dark hover:bg-gray-dark hover:text-white\"\n\t\t\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\t\t\tthis.closeModal(evt);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DeleteIcon className=\"text-lg leading-lg\" />\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t\tonClose={(evt) => this.closeModal(evt)}\n\t\t\t\t>\n\t\t\t\t\t<form id=\"upload-form\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<div className=\"form-group grid grid-cols-2 gap-2\">\n\t\t\t\t\t\t\t<label htmlFor=\"currentSheet\">Current Sheet</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tid=\"currentSheet\"\n\t\t\t\t\t\t\t\tclassName=\"border p-2 bg-white\"\n\t\t\t\t\t\t\t\tvalue={currentSheet}\n\t\t\t\t\t\t\t\tonChange={(evt) => {\n\t\t\t\t\t\t\t\t\tthis.setState({ currentSheet: evt.target.value });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"T.To\">To</option>\n\t\t\t\t\t\t\t\t<option value=\"T.By\">By</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<label className=\"\" htmlFor=\"keyname\">\n\t\t\t\t\t\t\t\tField Name\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"p-2 border\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"keyname\"\n\t\t\t\t\t\t\t\tid=\"keyname\"\n\t\t\t\t\t\t\t\tvalue={keyInputValue}\n\t\t\t\t\t\t\t\tonChange={(evt) => {\n\t\t\t\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\t\t\t\tthis.setState({ keyInputValue: evt.target.value });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<label className=\"\" htmlFor=\"value\">\n\t\t\t\t\t\t\t\tField Value\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"p-2 border\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"value\"\n\t\t\t\t\t\t\t\tid=\"value\"\n\t\t\t\t\t\t\t\tvalue={valueInputValue}\n\t\t\t\t\t\t\t\tonChange={(evt) => {\n\t\t\t\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\t\t\t\tthis.setState({ valueInputValue: evt.target.value });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TEdit);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction PLEdit(props) {\n\treturn <div>PLEdit</div>;\n}\n\nPLEdit.propTypes = {\n\tchildren: PropTypes.node,\n};\n\nexport default PLEdit;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction BSEdit(props) {\n\treturn <div>BSEdit</div>;\n}\n\nBSEdit.propTypes = {\n\tchildren: PropTypes.node,\n};\n\nexport default BSEdit;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction CSEdit(props) {\n\treturn <div>CSEdit</div>;\n}\n\nCSEdit.propTypes = {\n\tchildren: PropTypes.node,\n};\n\nexport default CSEdit;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { updateSheet } from '../../app/appReducer';\nimport EditableFormGroup from '../../atoms/EditableFormGroup';\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst { data } = state.app;\n\treturn {\n\t\tdata: data,\n\t\t...ownProps,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\tupdateSheet: (data) => {\n\t\tdispatch(updateSheet(data));\n\t},\n});\n\nclass InfoEdit extends Component {\n\tstatic propTypes = {\n\t\tchildren: PropTypes.node,\n\t};\n\n\tstatic defaultProps = {};\n\n\trender() {\n\t\tconst { Info } = this.props.data;\n\n\t\treturn (\n\t\t\t<div className=\"info-edit edit-view\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"form-container flex flex-col items-center justify-center mx-auto bg-green-light p-2\"\n\t\t\t\t\tstyle={{ maxWidth: '800px' }}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"flex-1 text-center underline uppercase text-lg\">Information</div>\n\t\t\t\t\t<div className=\"grid grid-cols-2 gap-4\">\n\t\t\t\t\t\t{Info ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{Object.keys(Info).map((keyName, i) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<React.Fragment key={i}>\n\t\t\t\t\t\t\t\t\t\t\t<EditableFormGroup\n\t\t\t\t\t\t\t\t\t\t\t\teditableKey={false}\n\t\t\t\t\t\t\t\t\t\t\t\tkeyName={keyName}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={Info[keyName]}\n\t\t\t\t\t\t\t\t\t\t\t\tsheetName=\"Info\"\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange={this.props.updateSheet}\n\t\t\t\t\t\t\t\t\t\t\t\thandleKeyChange={this.props.updateSheetKey}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoEdit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport TEdit from \"./TEdit\";\nimport PLEdit from \"./PLEdit\";\nimport BSEdit from \"./BSEdit\";\nimport CSEdit from \"./CSEdit\";\nimport InfoEdit from './InfoEdit';\n\nconst Editor = ({ isActive, ...others }) => {\n    const edit = useSelector((state) => state.editor.edit);\n    if (!isActive)\n        return null;\n    return (\n        <div className=\"editor\" {...others}>\n            {edit === \"Info\" ? (\n                <InfoEdit />\n            ) : (\n                <></>\n            )}\n            {edit === \"T\" ? (\n                <TEdit />\n            ) : (\n                <></>\n            )}\n            {edit === \"PL\" ? (\n                <PLEdit />\n            ) : (\n                <></>\n            )}\n            {edit === \"BS\" ? (\n                <BSEdit />\n            ) : (\n                <></>\n            )}\n            {edit === \"CS\" ? (\n                <CSEdit />\n            ) : (\n                <></>\n            )}\n        </div>\n    );\n}\n\nEditor.propTypes = {\n    children: PropTypes.node,\n    isActive: PropTypes.bool.isRequired,\n};\n\nEditor.defaultProps = {\n    isActive: true\n};\n\nexport default Editor;\n\n","import React from 'react';\nimport { ImPrinter } from 'react-icons/im';\nimport { useReactToPrint } from 'react-to-print';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport './App.css';\nimport Header from '../../atoms/Header';\nimport Viewer from '../../molecules/viewer/Viewer';\nimport Editor from '../../molecules/editor/Editor';\nimport { updateData } from '../../app/appReducer';\nimport { fetchData } from '../../utilities/fetchUtil';\n// import { downloadAsPDF } from './app/helpers';\n\nconst App = () => {\n    const componentRef = React.useRef();\n    const dispatch = useDispatch();\n\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n\n    // function handlePrint() {\n    //     downloadAsPDF(componentRef.current, 'test.pdf');\n    // }\n\n    // Load a local mockup\n    React.useEffect(() => {\n        if (process.env.NODE_ENV === \"development\")\n            fetchData('sample_mock').then((data) => {\n                dispatch(updateData(data));\n            }).catch((err) => {\n                console.log(err);\n            });\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        window.onkeydown = function (e) {\n            if (e.ctrlKey && e.keyCode === 'P'.charCodeAt(0)) {\n                e.preventDefault();\n                handlePrint();\n            }\n        };\n    });\n\n    const isEditing = useSelector((state) => state.app.isEditing);\n\n    return (\n        <div className=\"App dark:bg-black\">\n            <Header\n                printButton={\n                    !isEditing ? (\n                        <a\n                            className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75\"\n                            href=\"#print\"\n                            onClick={handlePrint}\n                        >\n                            <ImPrinter className=\"text-lg leading-lg text-white opacity-75\" />\n                            <span className=\"ml-2\">Print</span>\n                        </a>\n                    ) : null\n                }\n            />\n\n            <Viewer isActive={!isEditing} ref={componentRef} />\n            <Editor isActive={isEditing} />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './app/store';\n\nimport './index.css';\nimport App from './organisms/App/App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}